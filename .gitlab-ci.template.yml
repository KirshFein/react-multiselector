image: node:15-alpine

stages:
  - test
  - deploy
  - storybook
  - pages

.build_template: &build_definition
  before_script:
    - npm ci

test:
  stage: test
  <<: *build_definition
  script:
    - npm run lint:unix
    - npm run type-check
  except:
    - master

deploy:
  stage: deploy
  image: docker/compose:latest
  services:
    - docker:dind
  before_script:
    - mkdir -p ~/.ssh/
    - echo -e 'Host *\n\tStrictHostKeyChecking no\n\n' > ~/.ssh/config
    - echo "$SSH_KEY" > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh
    - chmod 400 ~/.ssh/id_rsa
  script:
    - DOCKER_HOST="ssh://$SSH_USER@$SSH_HOST" docker-compose up -d --build
  environment:
    name: production
    url: https://template-react.ru/
  only:
    - master

storybook:
  stage: storybook
  <<: *build_definition
  variables:
    PUBLIC_URL: "/template/react"
    REACT_APP_BASE_API_URL: "https://base-api-url.ru"
  script:
    - npm run build-storybook
  artifacts:
    paths:
      - storybook-static/
    expire_in: 30 min
  only:
    - develop

pages:
  stage: pages
  before_script:
    - apk add gzip
  script:
    - rm -rf public
    - mv storybook-static public
    - gzip -k -6 -r public
  artifacts:
    paths:
      - public
  dependencies:
    - storybook
  environment:
    name: staging
    url: https://mst-dev-ops.gitlab.io/template/react
  only:
    - develop
